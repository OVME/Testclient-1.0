//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.34014
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.CombinedTP {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://tempuri.org", ConfigurationName="CombinedTP.CombinedServiceSoap")]
    public interface CombinedServiceSoap {
        
        // CODEGEN: Контракт генерации сообщений с именем ReqString из пространства имен http://tempuri.org не отмечен как обнуляемый
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CombinedTP.CombinedService.GetRId", ReplyAction="*")]
        Client.CombinedTP.GetRIdResponse GetRId(Client.CombinedTP.GetRIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CombinedTP.CombinedService.GetRId", ReplyAction="*")]
        System.Threading.Tasks.Task<Client.CombinedTP.GetRIdResponse> GetRIdAsync(Client.CombinedTP.GetRIdRequest request);
        
        // CODEGEN: Контракт генерации сообщений с именем ResultResult из пространства имен http://tempuri.org не отмечен как обнуляемый
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CombinedTP.CombinedService.Result", ReplyAction="*")]
        Client.CombinedTP.ResultResponse Result(Client.CombinedTP.ResultRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CombinedTP.CombinedService.Result", ReplyAction="*")]
        System.Threading.Tasks.Task<Client.CombinedTP.ResultResponse> ResultAsync(Client.CombinedTP.ResultRequest request);
        
        // CODEGEN: Контракт генерации сообщений с именем StatusResult из пространства имен http://tempuri.org не отмечен как обнуляемый
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CombinedTP.CombinedService.Status", ReplyAction="*")]
        Client.CombinedTP.StatusResponse Status(Client.CombinedTP.StatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CombinedTP.CombinedService.Status", ReplyAction="*")]
        System.Threading.Tasks.Task<Client.CombinedTP.StatusResponse> StatusAsync(Client.CombinedTP.StatusRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetRId", Namespace="http://tempuri.org", Order=0)]
        public Client.CombinedTP.GetRIdRequestBody Body;
        
        public GetRIdRequest() {
        }
        
        public GetRIdRequest(Client.CombinedTP.GetRIdRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org")]
    public partial class GetRIdRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string ReqString;
        
        public GetRIdRequestBody() {
        }
        
        public GetRIdRequestBody(string ReqString) {
            this.ReqString = ReqString;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetRIdResponse", Namespace="http://tempuri.org", Order=0)]
        public Client.CombinedTP.GetRIdResponseBody Body;
        
        public GetRIdResponse() {
        }
        
        public GetRIdResponse(Client.CombinedTP.GetRIdResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org")]
    public partial class GetRIdResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetRIdResult;
        
        public GetRIdResponseBody() {
        }
        
        public GetRIdResponseBody(string GetRIdResult) {
            this.GetRIdResult = GetRIdResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ResultRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Result", Namespace="http://tempuri.org", Order=0)]
        public Client.CombinedTP.ResultRequestBody Body;
        
        public ResultRequest() {
        }
        
        public ResultRequest(Client.CombinedTP.ResultRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org")]
    public partial class ResultRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public long id;
        
        public ResultRequestBody() {
        }
        
        public ResultRequestBody(long id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ResultResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ResultResponse", Namespace="http://tempuri.org", Order=0)]
        public Client.CombinedTP.ResultResponseBody Body;
        
        public ResultResponse() {
        }
        
        public ResultResponse(Client.CombinedTP.ResultResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org")]
    public partial class ResultResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string ResultResult;
        
        public ResultResponseBody() {
        }
        
        public ResultResponseBody(string ResultResult) {
            this.ResultResult = ResultResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class StatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Status", Namespace="http://tempuri.org", Order=0)]
        public Client.CombinedTP.StatusRequestBody Body;
        
        public StatusRequest() {
        }
        
        public StatusRequest(Client.CombinedTP.StatusRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org")]
    public partial class StatusRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public long id;
        
        public StatusRequestBody() {
        }
        
        public StatusRequestBody(long id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class StatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="StatusResponse", Namespace="http://tempuri.org", Order=0)]
        public Client.CombinedTP.StatusResponseBody Body;
        
        public StatusResponse() {
        }
        
        public StatusResponse(Client.CombinedTP.StatusResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org")]
    public partial class StatusResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string StatusResult;
        
        public StatusResponseBody() {
        }
        
        public StatusResponseBody(string StatusResult) {
            this.StatusResult = StatusResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CombinedServiceSoapChannel : Client.CombinedTP.CombinedServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CombinedServiceSoapClient : System.ServiceModel.ClientBase<Client.CombinedTP.CombinedServiceSoap>, Client.CombinedTP.CombinedServiceSoap {
        
        public CombinedServiceSoapClient() {
        }
        
        public CombinedServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CombinedServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CombinedServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CombinedServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Client.CombinedTP.GetRIdResponse Client.CombinedTP.CombinedServiceSoap.GetRId(Client.CombinedTP.GetRIdRequest request) {
            return base.Channel.GetRId(request);
        }
        
        public string GetRId(string ReqString) {
            Client.CombinedTP.GetRIdRequest inValue = new Client.CombinedTP.GetRIdRequest();
            inValue.Body = new Client.CombinedTP.GetRIdRequestBody();
            inValue.Body.ReqString = ReqString;
            Client.CombinedTP.GetRIdResponse retVal = ((Client.CombinedTP.CombinedServiceSoap)(this)).GetRId(inValue);
            return retVal.Body.GetRIdResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Client.CombinedTP.GetRIdResponse> Client.CombinedTP.CombinedServiceSoap.GetRIdAsync(Client.CombinedTP.GetRIdRequest request) {
            return base.Channel.GetRIdAsync(request);
        }
        
        public System.Threading.Tasks.Task<Client.CombinedTP.GetRIdResponse> GetRIdAsync(string ReqString) {
            Client.CombinedTP.GetRIdRequest inValue = new Client.CombinedTP.GetRIdRequest();
            inValue.Body = new Client.CombinedTP.GetRIdRequestBody();
            inValue.Body.ReqString = ReqString;
            return ((Client.CombinedTP.CombinedServiceSoap)(this)).GetRIdAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Client.CombinedTP.ResultResponse Client.CombinedTP.CombinedServiceSoap.Result(Client.CombinedTP.ResultRequest request) {
            return base.Channel.Result(request);
        }
        
        public string Result(long id) {
            Client.CombinedTP.ResultRequest inValue = new Client.CombinedTP.ResultRequest();
            inValue.Body = new Client.CombinedTP.ResultRequestBody();
            inValue.Body.id = id;
            Client.CombinedTP.ResultResponse retVal = ((Client.CombinedTP.CombinedServiceSoap)(this)).Result(inValue);
            return retVal.Body.ResultResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Client.CombinedTP.ResultResponse> Client.CombinedTP.CombinedServiceSoap.ResultAsync(Client.CombinedTP.ResultRequest request) {
            return base.Channel.ResultAsync(request);
        }
        
        public System.Threading.Tasks.Task<Client.CombinedTP.ResultResponse> ResultAsync(long id) {
            Client.CombinedTP.ResultRequest inValue = new Client.CombinedTP.ResultRequest();
            inValue.Body = new Client.CombinedTP.ResultRequestBody();
            inValue.Body.id = id;
            return ((Client.CombinedTP.CombinedServiceSoap)(this)).ResultAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Client.CombinedTP.StatusResponse Client.CombinedTP.CombinedServiceSoap.Status(Client.CombinedTP.StatusRequest request) {
            return base.Channel.Status(request);
        }
        
        public string Status(long id) {
            Client.CombinedTP.StatusRequest inValue = new Client.CombinedTP.StatusRequest();
            inValue.Body = new Client.CombinedTP.StatusRequestBody();
            inValue.Body.id = id;
            Client.CombinedTP.StatusResponse retVal = ((Client.CombinedTP.CombinedServiceSoap)(this)).Status(inValue);
            return retVal.Body.StatusResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Client.CombinedTP.StatusResponse> Client.CombinedTP.CombinedServiceSoap.StatusAsync(Client.CombinedTP.StatusRequest request) {
            return base.Channel.StatusAsync(request);
        }
        
        public System.Threading.Tasks.Task<Client.CombinedTP.StatusResponse> StatusAsync(long id) {
            Client.CombinedTP.StatusRequest inValue = new Client.CombinedTP.StatusRequest();
            inValue.Body = new Client.CombinedTP.StatusRequestBody();
            inValue.Body.id = id;
            return ((Client.CombinedTP.CombinedServiceSoap)(this)).StatusAsync(inValue);
        }
    }
}
